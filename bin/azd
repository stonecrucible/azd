#!/bin/bash
#set ifs to prevent errors
IFS=$' \t\n'
#set PATH to prevent errors
PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
#strict bash mode
set -euo pipefail
#trapped cleanup function to remove strict bash mode after exit
function cleanup () { set +euo pipefail; }
trap cleanup EXIT;

#ware= program name
ware=$(basename $0)

#a replacement for echo that 
function xecho () { echo "$ware" : "$@"; }

#check if a command is provided, else command is help
if [ $# -gt 0 ];then
    cmd="$1";
    shift;
else
    cmd="help";
fi


vocabulary=("list" "info" "help" "find");
vocabulary_root=("install" "remove" "update" "upgrade" "edit" "autoremove")

if [[ "${vocabulary[*]}" =~ "$cmd"  ]]; then
    :
elif [[ "${vocabulary_root[*]}" =~ "$cmd"  ]]; then
    if [ "$(id -u)" != "0"  ];then xecho "requires root uid. exiting ..."; exit 1; fi ;
else 
    if [ "$cmd" != "vocabulary" ]; then
        xecho "unkown command \"$cmd\""
        exit 1
    fi

fi

for i in "${vocabulary_root[@]}"; do vocabulary+=("$i"); done;


unset vocabulary_root;

case "$cmd" in
    "install") 
        pacman -S "$@"
        ;;
    "remove") 
        pacman -Ru "$@"
        ;;
    "autoremove")
        "$0" remove "$@";
        yes | pacman -R "$(pacman -Qdtq)"
        ;;
    "list")
        if [ "$#" -gt 0 ];
        then
            case "$1" in
                "installed")
                    shift
                    pacman -Q "$@"
                    ;;
                "uinstalled")
                    shift
                    
                    if [ "$#" -eq 0 ]; then pacman -Qet
                    else pacman -Qet | grep "$@" --color=always
                    fi
                    ;;
                *) xecho "unkown command \"$cmd::$1\""; exit 10000 ;;
            esac
        fi;

        ;;
    "find") pacman -Ss "$@" | grep -ve "^    " | cut -d/ -f2 ;;
    "update") pacman -Syu;;
    "update-only") ;;# pacman -Syy ;;
    "upgrade") ;;
    "info") 
        ;;
    "help") 
        xecho "help"
        ;;
    "vocabulary")
        if [ "$#" -eq 0 ]; then echo "${vocabulary[*]}";
        else
            if [[ ! "${vocabulary[*]}" =~ "$1"  ]]; then exit 3; fi

            if [ "$1" = "list" ]; then echo "installed uinstalled"; fi

        fi
        ;;
    "edit") vim "$0";
        ;;
esac

exit 0;
